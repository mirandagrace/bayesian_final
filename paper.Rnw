\documentclass{article}
\usepackage[margin=0.75in]{geometry}
\usepackage{amsmath,amssymb}
\usepackage{graphicx,float}
\usepackage{multirow,setspace}
\usepackage{enumerate}
\usepackage{booktabs}
\usepackage{placeins}
\usepackage{cite}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{wrapfig}
\usepackage{hyperref}
\usepackage{listings}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}
\newcommand{\tab}{\hspace{0.5cm}}
\newcommand{\modref}[1]{(\ref{#1})}
\mathchardef\mhyphen="2D




\newcounter{DefnCounter}
\setcounter{DefnCounter}{1}

\newcounter{ThmCounter}
\setcounter{ThmCounter}{1}

\newcounter{ExampleCounter}
\setcounter{ExampleCounter}{1}

\newcommand{\defn}[1]{\textsc{Definition 1.\arabic{DefnCounter}\stepcounter{DefnCounter}: #1\\} }
\newcommand{\thm}{\textsc{Theorem 1.\arabic{ThmCounter}\stepcounter{ThmCounter}\\} }
\newcommand{\ex}{\textsc{Example 1.\arabic{ExampleCounter}\stepcounter{ExampleCounter}\\} }

\newcommand{\Defn}{\underline{Definition}}
\newcommand{\Q}{\underline{Question}}
\newcommand{\Qs}{\underline{Questions}}
\newcommand{\bbeta}{{\mbox{\boldmath$\beta$}}}
\newcommand{\bmu}{{\mbox{\boldmath$\mu$}}}
\newcommand{\balpha}{{\mbox{\boldmath$\alpha$}}}
\newcommand{\btheta}{{\mbox{\boldmath$\theta$}}}
\newcommand{\bphi}{{\mbox{\boldmath$\phi$}}}
\newcommand{\bSigma}{{\mbox{\boldmath$\Sigma$}}}
\newcommand{\bLambda}{{\mbox{\boldmath$\Lambda$}}}
\newcommand{\bpi}{{\mbox{\boldmath$\pi$}}}
\newcommand{\R}{\texttt{R}}
\newcommand{\Lik}{\mathcal{L}}
\newcommand{\bx}{\textbf{x}}
\newcommand{\by}{\textbf{y}}
\newcommand{\bX}{\textbf{X}}
\newcommand{\sic}{\text{Inv-}\chi^2}


\newcommand{\sao}{SaO$_2$}

\setlength{\marginparwidth}{2cm}
\begin{document}
<<imports, cache=FALSE, echo=FALSE>>= 
read_chunk('zinb_sampler.R')
options(scipen=4, digits=3)
library('truncnorm')
@
<<dataset, echo=FALSE, cache=FALSE>>= 
load('small_storms.RData')
storm_details <- small_storms
@
\begin{center}
	\vspace{0.1cm}
	\textsc{\LARGE MATH 640 Final Project} \\[0.1cm]
	Jason Michaels (jam521), Niko Paulson (ndp32), Miranda Seitz-McLeese (mgs85) 
\end{center}
\section{Introduction}
\label{s:intro}
Tornados and Flash Floods are reponsible for the second and third most direct deaths among weather types in the United States. Understanding how and at what rate severe weather events become lethal in the United States has tremendous public health impacts. NOAA's website has a database of weather events and the death toll available on their website \cite{dataset}. For this study we looked at events from 1996-2016.

The death toll from a severe weather event is a form of `count' data. 
The most common model used for count data is the Poisson distribution. 
However for some natural events, the negative binomial model is a better fit, because it is more flexible and allows for a difference between mean and variance.

Fortunately, the vast majority of severe weather events in the United States involve no deaths, so to account for the possibility of structural zeros, therefore we also considered zero inflated variants. 
These distributions are created by returning $0$ with probability $\sigma$ and sampling from the original distribution with probability $(1-\sigma)$. We will derive and fit a model for each of the four distributions and see if there is a difference in our results and evaluate to determine which model best fits the data.

The remainder of this analysis is organized as follows: Section~\ref{s:methods} discusses and derives the models. Section~\ref{s:results} describes the results of the analysis. And Section~\ref{s:discussion} contains the conclusions.

\section{Methods}
\label{s:methods}
\subsection{Poisson}
\label{ss:mPoisson}
The Poisson model has one parameter, $\lambda$ represents the expected number of occurances of the event of interest. For a single random variable $x$, the probability density is:
$$p(x|\lambda)=\frac{\lambda^xe^{-\lambda}}{x!}.$$
We use Jeffrey's prior, and model 
$$\lambda|X\sim\mathcal{G}amma(n\bar{X}+1/2,n).$$ 
For a full derivation see~\ref{a:dP}.

\subsection{Negative Binomial}
\label{ss:mNBinom}
The Negative Binomial model has two parameters, $r,p$ represents the expected number of occurances of the event of interest. For a single random variable $x$, the probability density is:
$$p(X|r,p)=\frac{\Gamma(r+x)}{\Gamma(r)x!}p^{x}(1-p)^{r}.$$
We will use a non-informative random variable, namely, Jeffreys' prior, giving us the following full conditionals: 
$$p(p|r,X)\propto p^{n\bar{x}-1}(1-p)^{nr+1/2-1}$$
We recognize this as the kernel of a beta distribution, namely
$$p|r,X\sim\mathcal{B}eta(n\bar{X},nr+1/2).$$
Next consider $r|p,X$:
$$p(r|p,X)\propto\bigg[\prod_{i=1}^n\Gamma(r+x_i)\bigg]\Gamma(r)^{-n}(1-p)^{nr}r^{1/2}$$
This is not a recognized distribtion. So if we wish to make inferences on $r$ we must use a Metropolis algorithm to sample from it. For a full derivation see~\ref{a:dNB}.

\subsection{Zero Inflated Poisson}
\label{ss:mZiPoisson}
The Zero Inflated Poisson (ZIP) model has two parameters. The parameter p is the probability of a structural zero, and $\lambda$ corresponds to the parameter in a typical Poisson model. For a single observation x, the probability density is:

\[
p(x|p, \lambda) = pI_{x=0}(x) + (1-p)\frac{e^{-\lambda}\lambda^x}{x!}
\]
 
 
\noindent We can write the likelihood as follows:
$$
L(p, \lambda|X) = \prod_{x_i=0}\bigg[p+(1-p)\frac{e^{-\lambda}\lambda^{x_i}}{x_i!}\bigg]\prod_{x_i \ne 0}\bigg[(1-p)\frac{e^{-\lambda}\lambda^{x_i}}{x_i!}\bigg]
$$

\noindent Bayarri, Berger, and Datta (2008) suggest using the prior distribution $\pi(\lambda, p) \propto \frac{1}{\sqrt{\lambda}}I(0<p<1)$. This gives us the following posterior 

\[
\prod_{x_i=0}\bigg[p+(1-p)\frac{e^{-\lambda}\lambda^{x_i}}{x_i!}\bigg]\prod_{x_i \ne 0}\bigg[(1-p)\frac{e^{-\lambda}\lambda^{x_i - 1/2}}{x_i!}\bigg]
\]

\noindent Neither of the full conditional distributions is recognizable (see \ref{a:dZIP}). We can use a Metropolis-Hastings algorithm to sample from both of them. We will use a beta distribution as a proposal for p, and a gamma for $\lambda$. We will tune them to obtain a better acceptance rate. 


\subsection{Zero Inflated Negative Binomial}
\label{ss:mZiNBinom}
The Zero Inflated Negative Binomial (ZINB) model has three parameters $\sigma,$ the probability of a structural zero, and $p,r$ the usual negative binomial parameters. 
For a single $X$ the probability density is: 
$$p(X|\sigma, p, r) = \sigma I_{X=0}(X) + (1-\sigma)\frac{\Gamma(r+X)}{\Gamma(r)X!}p^X(1-p)^r.$$
We take the uniform priors for $\sigma$ and $p$ as well as the non-informative gamma for $r$ which is $r^{-1/2}$. For a full derivation, see \ref{a:dZINB}. My posterior is:
$$p(r,\sigma, p|X)\propto\left(\sigma + (1-\sigma)(1-p)^r\right)^Z(1-\sigma)^{N-Z}(1-p)^{(N-Z)r}p^{\sum_{i=1}^NX_i}r^{-1/2}\prod_{i=1}^N\left(\frac{\Gamma(r+X_i)}{\Gamma(r)}\right)$$
This distribution does not factor, so I will use the Metropolis-Hastings algorithm to sample from it. I will use a truncated normal distribution centered at $\theta^*$ proposal density, and tune the variance for efficient convergence.

\section{Results}
\label{s:results}
\subsection{Poisson}
\label{ss:rPoisson}

The posterior from our Poisson likelihood and noninformative prior had a recognizable kernel, namely $\mathcal{G}amma(n\bar{X}+1/2,n)$, therefore we were able to sample from this distribution directly. For both event types, 10,000 samples were taken, to simulate the variable of interest, $\lambda$. The results are summarized in Table~\ref{t:rPOIS}, while density plots can be found in Figure~\ref{f:poisnbdensity}.

\begin{table}
    \centering
    \caption{Posterior distributions of $\lambda$, for both event types. The second column relays the median of the sample for $\lambda$, with the 95 percent credible interval in parentheses.}
    \label{t:rPOIS}
    \begin{tabular}{| l | l | l |}
    \hline
    Event Type &  Tornado &  Flash Flood \\ \hline
    $\lambda$ & 0.0592 (0.0564, 0.0620)  & 0.0179 (0.0170, 0.0189)\\
    \hline
    \end{tabular}
\end{table}

\begin{figure}
\centering
\includegraphics[width=.4\textwidth]{figure/POIS_Density.pdf}
\includegraphics[width=.4\textwidth]{figure/NB_Density.pdf}
\caption{Posterior density plots for Poisson (left) and Negative Binomial (right) for flood parameters (in blue), and tornado parameters (black). The solid line represents the median and the dashed lines indicate the 95\% confidence interval.}
\label{f:poisnbdensity}
\end{figure}

\subsection{Negative Binomial}
\label{ss:rNBinom}

The conditional posterior from our Negative Binomial likelihood and noninformative prior also had a recognizable kernel for $p$, namely $\mathcal{B}eta(n\bar{X},nr+1/2)$, thus we were able to sample from this distribution directly. We took $r$ as known. For both event types, 10,000 samples were taken. The results are summarized in Table~\ref{t:rNB}, and density plots can be found in Figure~\ref{f:poisnbdensity}.
\subsection{Zero Inflated Poisson}
\label{ss:rZiPoisson}
The proposal distribution selected for $\lambda$ was a gamma(2, 2) for tornados, and a gamma(1, 2) for flash floods. The proposal for p within the tornado model was a beta(1940, 60), whereas it was a beta(2945, 55) in the flash flood model. For each variable, 20,000 samples were taken. As convergence was not immediately achieved, the first 10,000 samples were discarded as a burn-in. The results are summarized in Table~\ref{t:rZIP}. Density plots can be found in Figure~\ref{f:zipfig}.

\begin{table}
    \centering
      \caption{The posterior distributions of $\lambda$ and p, for both event types. The second column relays the mean and 95 percent credible interval in parentheses. The third does the same for p.}
      \label{t:rZIP}
      \begin{tabular}{| l | l | l |}
      \hline
      Event Type & $\lambda$ & p  \\ \hline
      Tornado & 1.872 (1.030, 3.710) & 0.971 (0.968, 0.973) \\ \hline
      Flash Flood & 0.562 (0.293, 0.972) & 0.982 (0.981, 0.983) \\ \hline
      \end{tabular}
\end{table}

\begin{figure}
\centering
%\includegraphics[width=.65\textwidth]{figure/ZIP_Flood_Conv.pdf}\\
\includegraphics[width=.65\textwidth]{figure/ZIP_Density.pdf}
\caption{
%Top: Cumulative mean plots for the posterior samples (ZIP model) of the two parameters from the flood data. Plots for the tornado data are not pictured, but behave similarly. Bottom:
Posterior density plots (ZIP model) for flood parameters (in blue), and tornado parameters (black). The solid line represents the mean and the dashed lines indicate the 95\% confidence interval.}
\label{f:zipfig}
\end{figure}

\subsection{Zero Inflated Negative Binomial}
\label{ss:rZiNBinom}
<<zinbsampler, echo=FALSE>>=
@
<<densityplot, echo=FALSE>>=
@
<<zinbparams, echo=FALSE, cache=TRUE>>=
samplesize <- 2030000
burnin <- 30000
thin <- 250
r.var=.00002
p.var=.00001
sigma.var=.001
@
<<floodsample, cache=TRUE, cache.vars='flood.zinb', echo=FALSE, dependson='zinbparams'>>=
flood.zinb <- zinb.sampler(storm_details, "Flash Flood", samplesize, 
                           r.var=r.var, p.var=p.var, sigma.var=sigma.var, 
                           burnin=burnin, thinning=thin)
@
<<tornadosample, cache=TRUE, cache.vars='tornado.zinb', echo=FALSE, dependson='zinbparams'>>=
tornado.zinb <- zinb.sampler(storm_details, "Tornado", samplesize, 
                             r.var=r.var, p.var=p.var, sigma.var=sigma.var, 
                             burnin=burnin, thinning=thin)
@
The ZINB model was fit using the Metropolis-Hastings algorithm with a truncated multivariate normal proposal distribution. For the source code of the sampler, please see \ref{a:cZINB}. Because it was fitting 3 parameters simultaniously this model was slow to converge, and had high autocorrelation, requiring agressive thinning. %Running mean plots the Flash Flood models can be found in Figure~\ref{f:zinbconvergence}. 
$\Sexpr{samplesize}$ samples were drawn for each model, with a burn in of $\Sexpr{burnin}$ and one of every $\Sexpr{thin}$ samples was retained, for a final sample size of $\Sexpr{length(flood.zinb$sigma)}$. %The flood model had an acceptance rate of $\Sexpr{mean(flood.zinb$ar)}$ and the tornado model had an acceptance rate of $\Sexpr{mean(flood.zinb$ar)}$. 
The resulting densities are pictured in Figure~\ref{f:zinbdensity}, and Table~\ref{t:ZINBparams}. The densities for $p$ and $r$ are readily interpretable:  $p$ can be understood to measure dangerousness and $r$ can be thought of as duration. This implies floods are longer lasting than tornadoes, but less dangerous.
<<evaluation, echo=FALSE, cache=FALSE>>=
@
<<model-eval, echo=FALSE, cache=TRUE, dependson=c('floodsample', 'tornadosample')>>=
flood.dic.zinb <- dic(storm_details, "Flash Flood", flood.zinb$sigma, 
                      flood.zinb$r, flood.zinb$p)
tornado.dic.zinb <- dic(storm_details, "Tornado", tornado.zinb$sigma, 
                        tornado.zinb$r, tornado.zinb$p)
#flood.wiac.zinb <- wiac(storm_details, "Flash Flood", flood.zinb$sigma, 
#                   flood.zinb$r, flood.zinb$p)
#tornado.wiac.zinb <- wiac(storm_details, "Tornado", tornado.zinb$sigma, 
#                          tornado.zinb$r, tornado.zinb$p)
@
\begin{table}
\centering
\caption{The following table shows the results of the flash flood ZINB model and the tornado ZINB model. It shows the mean and the median for each parameter as well as the 95\% credible interval.}
\label{t:ZINBparams}
\scalebox{.8}{
\begin{tabular}{lcccccc}
\toprule
&\multicolumn{3}{c}{Flash Flood}&\multicolumn{3}{c}{Tornado}\\
\cmidrule(r){2-4}\cmidrule(l){5-7}
Parameter & Mean Value &Median Value & (95\% CI)& Mean Value &Median Value & (95\% CI)\\
\midrule
$\sigma$ & \Sexpr{mean(flood.zinb$sigma)} &
  \Sexpr{median(flood.zinb$sigma)}&
  (\Sexpr{quantile(flood.zinb$sigma, probs=c(.025))[1]}, 
    \Sexpr{quantile(flood.zinb$sigma, probs=c(.975))[1]})&
  \Sexpr{mean(tornado.zinb$sigma)} &
  \Sexpr{median(tornado.zinb$sigma)}&
  (\Sexpr{quantile(tornado.zinb$sigma, probs=c(.025))[1]}, 
    \Sexpr{quantile(tornado.zinb$sigma, probs=c(.975))[1]})\\
$p$ &  \Sexpr{mean(flood.zinb$p)} &
  \Sexpr{median(flood.zinb$p)}&
  (\Sexpr{quantile(flood.zinb$p, probs=c(.025))[1]}, 
    \Sexpr{quantile(flood.zinb$p, probs=c(.975))[1]})&
  \Sexpr{mean(tornado.zinb$p)} &
  \Sexpr{median(tornado.zinb$p)}&
  (\Sexpr{quantile(tornado.zinb$p, probs=c(.025))[1]}, 
    \Sexpr{quantile(tornado.zinb$p, probs=c(.975))[1]})\\
$r$ &  \Sexpr{mean(flood.zinb$r)} &
  \Sexpr{median(flood.zinb$r)}&
  (\Sexpr{quantile(flood.zinb$r, probs=c(.025))[1]}, 
    \Sexpr{quantile(flood.zinb$r, probs=c(.975))[1]})&
  \Sexpr{mean(tornado.zinb$r)} &
  \Sexpr{median(tornado.zinb$r)}&
  (\Sexpr{quantile(tornado.zinb$r, probs=c(.025))[1]}, 
    \Sexpr{quantile(tornado.zinb$r, probs=c(.975))[1]})\\
\bottomrule
\end{tabular}}
\end{table}
%\begin{figure}[p]
%	\centering
 <<floodconvergence, cache=TRUE, echo=FALSE, dependson=c('floodsample', 'tornadosample'), fig.height=1.75>>=
# B<-length(flood.zinb$sigma)
# Bt<-length(tornado.zinb$sigma)
# par(mfrow=c(1, 3))
# par(mgp=c(1.25,.5,0))
# par(mar=c(3.1,4.1,2.5,.1))
# plot(cumsum(flood.zinb$sigma)/1:B, 
#      main = expression(paste('Cum. Mean (Flood) ',sigma)),
#      ylab = 'Cumulative Mean',
#      type='l')
# plot(cumsum(flood.zinb$r)/1:B, 
#      main = expression(paste('Cum. Mean (Flood) ',r)),
#      ylab = 'Cumulative Mean',
#      type='l')
# plot(cumsum(flood.zinb$p)/1:B, 
#      type='l', 
#      main = expression(paste('Cum. Mean (Flood) ',p)),
#      ylab = 'Cumulative Mean')
# acf(flood.zinb$sigma, 
#     main = expression(paste('ACF (Flood) ',sigma)))
# acf(flood.zinb$r,
#     main = expression(paste('ACF (Flood) ',r)))
# acf(flood.zinb$p,
#     main = expression(paste('ACF (Flood) ',p)))
# plot(cumsum(tornado.zinb$sigma)/1:Bt, 
#      main = expression(paste('Cum. Mean (Tornado) ',sigma)),
#      ylab = 'Cumulative Mean',
#      type='l')
# plot(cumsum(tornado.zinb$r)/1:Bt, 
#      main = expression(paste('Cum. Mean (Tornado) ',r)),
#      ylab = 'Cumulative Mean',
#      type='l')
# plot(cumsum(tornado.zinb$p)/1:Bt, 
#      type='l', 
#      main = expression(paste('Cum. Mean (Tornado) ',p)),
#      ylab = 'Cumulative Mean')
# acf(tornado.zinb$sigma, 
#     main = expression(paste('ACF (Tornado) ',sigma)))
# acf(tornado.zinb$r,
#     main = expression(paste('ACF (Tornado) ',r)))
# acf(tornado.zinb$p,
#     main = expression(paste('ACF (Tornado) ',p)))
@
%	\caption{Cumulative mean plots for each of the three parameters in the ZINB model fit on flash flood data. The tornado plots are not pictured, but are similar in character.}
%	\label{f:zinbconvergence}
%\end{figure} 

\begin{figure}
	\centering\scalebox{.8}{
<<zinbdensity, cache=TRUE, echo=FALSE, dependson=c('floodsample', 'tornadosample'), fig.height=2.5, fig.width=6>>=
par(mfrow=c(1,3))
double.density.plot(flood.zinb$sigma, tornado.zinb$sigma,
                    expression(paste(sigma, ' Posterior Density ')), 
                    expression(sigma), 
                    expression(p*group("(",paste(sigma, "|", X),")")),
                    col=c('blue', 'black'))
double.density.plot(flood.zinb$p, tornado.zinb$p,
                    expression(paste(p, ' Posterior Density ')), 
                    expression(p), 
                    expression(p*group("(",paste(p, "|", X),")")),
                    col=c('blue', 'black'))
double.density.plot(flood.zinb$r, tornado.zinb$r,
                    expression(paste(r, ' Posterior Density ')), 
                    expression(r), 
                    expression(p*group("(",paste(r, "|", X),")")),
                    col=c('blue', 'black'))
@
}
	\caption{Posterior density curves for each of the three variables (ZINB model). The flood posterior is shown in blue and the tornado posterior is shown in black.}
	\label{f:zinbdensity}
\end{figure} 
\section{Discussion}
\label{s:discussion}
\begin{table}
\centering
\caption{The following table shows the resulting DIC for each of the four models on both the tornado data and the flash flood data.}
\label{t:evalresults}
\scalebox{.8}{
\begin{tabular}{lrr}
\toprule
Model & DIC Flash Flood & DIC Tornado\\
\midrule
Poisson & 14237 & 17606\\
Negative Binomial & 101548 & 26372\\
ZIP & 10454 & 8727 \\
ZINB & \Sexpr{as.integer(flood.dic.zinb)}&\Sexpr{as.integer(tornado.dic.zinb)}\\
\bottomrule
\end{tabular}}
\end{table}
The goal of this analysis was to determine which of the four models best fit the data. In order to make this determination the DIC was calculated for each model on both tornados and flash floods. The results are summarized in Table~\ref{t:evalresults}.
The Zero Inflated Poisson model has the lowest DIC, for Flash Floods and the ZINB has the lowest for Tornados. For estimating or predicting lethality counts for weather it appears that zero inflated models out perform their plain variants however, which zero inflated model is not clear, as we only did two weather events and the ZINB and ZIP were similar. When attempting a regression model of death counts from weather events, researchers should consider a zero inflated model.

Negative binomial models tend to perform better than Poisson models when the mean is not equal to the varaince. It may be that this was true for the Tornadoes, but not true for the floods. The overdispersion of the Tornadoes can be clearly seen when comparing the posterior $\lambda$s for the ZIP model in Figure~\ref{f:zipfig}.

\begin{thebibliography}{2}
  \bibitem{dataset} NOAA's Severe Weather Data Inventory, 
    \url{https://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/}. 
    Accessed April 2017.
  \bibitem{ZIP} Bayarri, M., Berger, J., Datta, G. (2008). Objective testing of Poisson versus inflated Poisson models. IMS 	Collections, 3, 105-121. 
\end{thebibliography}

\appendix
\section{Code}
\label{a:code}
This appendix includes the code used to implement the models.
\subsection{Zero Inflated Negative Binomial code}
\label{a:cZINB}
<<zinbsampler-source, echo=TRUE, ref.label='zinbsampler'>>=
@
\subsection{Zero Inflated Poisson code}
<<eval = FALSE>>=
library(dplyr)
tornado <- data %>% filter(EVENT_TYPE == "Tornado") %>% select(DEATHS_DIRECT)
flood <- data %>% filter(EVENT_TYPE == "Flash Flood") %>% select(DEATHS_DIRECT)

# Precompute values to use in posterior function
zeros <- tornado %>% filter(DEATHS_DIRECT == 0) %>% select(DEATHS_DIRECT)
ones <- tornado %>% filter(DEATHS_DIRECT != 0) %>% select(DEATHS_DIRECT)
n <- nrow(ones)
t0_exp <- (zeros)/factorial(zeros)
l_t1_exp <- ones-1/2

# Define Posterior Functions
log_lam <- function(y, p, lambda){
  t0 <- sum(log(p + (1-p)*exp(-1*lambda)*(lambda+2e-10)^t0_exp))
  t1 <- sum(log(exp(-1*lambda)*lambda^l_t1_exp))
  return(t0+t1)
}

log_p <- function(y, p, lambda){
  t0 <- sum(log(p + (1-p)*exp(-1*lambda)*(lambda+2e-10)^t0_exp))
  t1_vec <- rep(1-p, n)
  t1 <- sum(log(t1_vec))
  return(t0+t1)
}

### Sampler for Tornado
set.seed(2011)

l_last <- 1
p_last <- .98

B <- 20000
lambdas <- rep(0, B)
ps <- rep(0, B)

l_accept <- rep(FALSE, B)
p_accept <- rep(FALSE, B)

for(t in 1:B){
  lambda <- rgamma(1, 3, 2)
  p <- rbeta(1, 1940, 60)
  ro_lam <- log_lam(tornado, p_last, lambda) - log(dgamma(lambda, 3, 2)) -
    log_lam(tornado, p_last, l_last) + log(dgamma(l_last, 3, 2))
  ro_p <- log_p(tornado, p, l_last) - log(dbeta(p, 1940, 60)) -
    log_p(tornado, p_last, l_last) + log(dbeta(p_last, 1940, 60))
  U_lambda <- runif(1)
  U_p <- runif(1)
  if(log(U_lambda) < min(0, ro_lam)){
    print(TRUE)
    lambdas[t] <- lambda
    lambda_last <- lambda
    l_accept[t] <- TRUE
  } else{
    print(FALSE)
    lambdas[t] <- lambda_last
  }
  
  if(log(U_p) < min(0, ro_p)){
    print(TRUE)
    ps[t] <- p
    p_last <- p 
    p_accept[t] <- TRUE
  } else{
    print(FALSE)
    ps[t] <- p_last
  }
}

# Do the same for flash floods

# Update values for likelihood function
zeros <- flood %>% filter(DEATHS_DIRECT == 0) %>% select(DEATHS_DIRECT)
ones <- flood %>% filter(DEATHS_DIRECT != 0) %>% select(DEATHS_DIRECT)
n <- nrow(ones)
t0_exp <- (zeros)/factorial(zeros)
l_t1_exp <- ones-1/2

# Sampler:
set.seed(2012)
l_last <- 1
p_last <- .98
B <- 20000
lambdas <- rep(0, B)
ps <- rep(0, B)
l_accept <- rep(FALSE, B)
p_accept <- rep(FALSE, B)
for(t in 1:B){
  print(paste0("t = ", as.character(t)))
  lambda <- rgamma(1, 1, 2)
  print(paste0("lambda = ", as.character(lambda)))
  p <- rbeta(1, 2945, 55)
  print(paste0("p = ", as.character(p)))
  ro_lam <- log_lam(flood, p_last, lambda) - log(dgamma(lambda, 1, 2)) -
    log_lam(flood, p_last, l_last) + log(dgamma(l_last, 1, 2))
  ro_p <- log_p(flood, p, l_last) - log(dbeta(p, 2945, 55)) -
    log_p(flood, p_last, l_last) + log(dbeta(p_last, 2945, 55))
  U_lambda <- runif(1)
  U_p <- runif(1)
  if(log(U_lambda) < min(0, ro_lam)){
    print(TRUE)
    lambdas[t] <- lambda
    lambda_last <- lambda
    l_accept[t] <- TRUE
  } else{
    print(FALSE)
    lambdas[t] <- lambda_last
  }
  
  if(log(U_p) < min(0, ro_p)){
    print(TRUE)
    ps[t] <- p
    p_last <- p 
    p_accept[t] <- TRUE
  } else{
    print(FALSE)
    ps[t] <- p_last
  }
}
@
\subsection{Poisson code}
<<eval = FALSE>>=
set.seed(05112017)

# --- model evaluation function -----------------------------------------------------------
DIC <- function(y, theta, loglik) {
  theta_hat = mean(theta) #theta_hat = apply(theta, 2, mean)
  L = loglik(y, theta_hat)
  S = length(theta) #S = nrow(theta) #S = number of iterations
  llSum = 0
  for (s in 1:S) {
    theta_s = theta[s]
    llSum = llSum + loglik(y, theta_s)
  }
  P = 2 * (L - (1 / S * llSum))
  DIC = - 2 * (L - P)
  return(DIC)
}

# --- poisson log-likelihood ---------------------------------------------------------
pois_ll <- function(x, lambda) {
  ll <- sum(dpois(x, lambda, log = TRUE))
  return(ll)
}

# --- poisson model -----------------------------------------------------------------
pois_fit <- function(data, nsim) {
  x <- data                            
  xbar <- mean(x)                      
  n <- length(x)                       
  lambda <- rgamma(nsim, n * xbar + 1 /2, n) 
  return(lambda)
}

# --- results - ---------------------------------------------------------------------------
lambda_t <- pois_fit(data = TORNADO$DEATHS, nsim = 10000)
lambda_ff <- pois_fit(data = FLASH_FLOOD$DEATHS, nsim = 10000)

quantile(lambda_t, c(0.025, 0.5, 0.975))
quantile(lambda_ff, c(0.025, 0.5, 0.975))

DIC(TORNADO$DEATHS, lambda_t, pois_ll)
DIC(FLASH_FLOOD$DEATHS, lambda_ff, pois_ll)
@

\subsection{Negative Binomial code}
<<eval = FALSE>>=
# --- negative binomial log-likelihood ---------------------------------------------------------
nb_ll <- function(x, p) {
  ll <- sum(dnbinom(x = x, prob = p, size = 1 / 4, log = TRUE))
  return(ll)
}

# --- negative binomial model -----------------------------------------------------------------
nb_fit <- function(data, nsim) {
  x <- data
  xbar <- mean(x)
  n <- length(x)
  r <- 1 / 4
  p <- rbeta(nsim, n * xbar, n * r + 1 / 2) 
  return(p)
}

# --- results - ---------------------------------------------------------------------------
p_t <- nb_fit(data = TORNADO$DEATHS, nsim = 10000)
p_ff <- nb_fit(data = FLASH_FLOOD$DEATHS, nsim = 10000)

# --- credible intervals ----------------------------------------------------------------------
quantile(p_t, c(0.025, 0.5, 0.975))
quantile(p_ff, c(0.025, 0.5, 0.975))

# --- dic ----------------------------------------------------------------------
DIC(TORNADO$DEATHS, p_t, nb_ll)
DIC(FLASH_FLOOD$DEATHS, p_ff, nb_ll)

@


\section{Derivations}
\label{a:derivation}
This appendix will include details on the calculations required to derive our models.
\subsection{Poisson Derivation}
\label{a:dP}
The likelihood for a sum of Poisson random variables can be written as follows:
$$\mathcal{L}(X|\lambda)\propto\lambda^{n\bar{X}}e^{-n\lambda}.$$ 
Since we want the data to speak for itself, we will use a non-informative random variable, namely, Jeffreys' prior. For the Poisson distribtion this is given as follows:
$$\pi(\lambda)\propto\lambda^{1/2-1}e^{-0\cdot\lambda}.$$
We recognize this as the kernel of an improper gamma distribution. Combining the likelihood and the prior distribtion yields the following posterior distribution:
$$p(\lambda|X)=\lambda^{n\bar{X}+1/2-1}e^{-n\lambda}.$$
We recognize this as the kernel of a gamma distribution, namely
$$\lambda|X\sim\mathcal{G}amma(n\bar{X}+1/2,n).$$ 

\subsection{Negatvie Binomial Derivation}
\label{a:dNB}
The likelihood for a sum of Negative Binomial random variables can be written as follows:
$$\mathcal{L}(X|r,p)=\Bigg[\prod_{i=1}^n\frac{\Gamma(r+x_i)}{\Gamma(r)x_i!}\Bigg]p^{n\bar{X}}(1-p)^{nr}.$$
Since we want the data to speak for itself, we will use a non-informative random variable, namely, Jeffreys' prior. For the Poisson distribtion this is given as follows:
$$\pi(r,p)=r^{1/2}p^{-1}(1-2)^{-1/2}.$$
Combining the likelihood and the prior distribtion yields the following posterior distribution:
$$p(r,p|X)=\Bigg\{\Bigg[\prod_{i=1}^n\frac{\Gamma(r+x_i)}{\Gamma(r)x_i!}\Bigg]p^{n\bar{X}}(1-p)^{nr}\Bigg\}\Bigg\{r^{1/2}p^{-1}(1-2)^{-1/2}\Bigg\}$$
From this posterior we obtain the full conditionals. First consider $p|r,X$:
$$p(p|r,X)\propto p^{n\bar{x}-1}(1-p)^{nr+1/2-1}$$
We recognize this as the kernel of a beta distribution, namely

$$p|r,X\sim\mathcal{B}eta(n\bar{X},nr+1/2).$$
Next consider $r|p,X$:
$$p(r|p,X)\propto\bigg[\prod_{i=1}^n\Gamma(r+x_i)\bigg]\Gamma(r)^{-n}(1-p)^{nr}r^{1/2}$$

\subsection{Zero Inflated Poisson Derivation}
\label{a:dZIP}
\noindent In obtaining our full conditionals, we can simplify this slightly to obtain the following:

\[
p(\lambda|X, p) \propto \prod_{x_i=0}\bigg[p+(1-p)\frac{e^{-\lambda}\lambda^{x_i}}{x_i!}\bigg]\prod_{x_i \ne 0}\bigg[e^{-\lambda}\lambda^{x_i - 1/2}\bigg]
\]

\[
p(p|X, \lambda) \propto \prod_{x_i=0}\bigg[p+(1-p)\frac{e^{-\lambda}\lambda^{x_i}}{x_i!}\bigg]\prod_{x_i \ne 0}\bigg[(1-p)\bigg]
\]
\subsection{Zero Inflated Negative Binomial Derivation}
\label{a:dZINB}
The likelihood for the ZINB is 
\begin{align*}
\mathcal{L}(X|\sigma, p, r) &= \prod_{i=1}^N \sigma I_{X=0}(X_i) + (1-\sigma)\frac{\Gamma(r+X_i)}{\Gamma(r)X_i!}\\
\intertext{For ease of notation let $Z$ be the number of zero values in $X$, and $N$ be the total number of observations.}
&=\prod_{X_i=0}\left(\sigma + (1-\sigma)p^{X_i}(1-p)^r\frac{\Gamma(r+X_i)}{\Gamma(r)X_i!}\right)\prod_{X_i\ne 0}\left((1-\sigma)p^{X_i}(1-p)^r\frac{\Gamma(r+X_i)}{\Gamma(r)X_i!}\right)\\
&=\left(\sigma + (1-\sigma)(1-p)^r\right)^Z\prod_{X_i\ne 0}\left((1-\sigma)p^{X_i}(1-p)^r\frac{\Gamma(r+X_i)}{\Gamma(r)X_i!}\right)\\
&\propto\left(\sigma + (1-\sigma)(1-p)^r\right)^Z\prod_{X_i\ne 0}\left((1-\sigma)p^{X_i}(1-p)^r\frac{\Gamma(r+X_i)}{\Gamma(r)}\right)\\
&\propto\left(\sigma + (1-\sigma)(1-p)^r\right)^Z(1-\sigma)^{N-Z}(1-p)^{(N-Z)r}p^{\sum_{i=1}^NX_i}\prod_{i=1}^n\left(\frac{\Gamma(r+X_i)}{\Gamma(r)}\right)
\end{align*}
As mentioned in section \ref{ss:mZiNBinom} we take the uniform priors for $\sigma$ and $p$ as well as the non-informative gamma for $r$ which is $r^{-1/2}$. Therefore my joint posterior is:
\begin{align*}
p(r,\sigma, p|X)\propto&\left(\sigma + (1-\sigma)(1-p)^r\right)^Z(1-\sigma)^{N-Z}(1-p)^{(N-Z)r}p^{\sum_{i=1}^NX_i}r^{-1/2}\prod_{i=1}^N\left(\frac{\Gamma(r+X_i)}{\Gamma(r)}\right)\\
\intertext{I am now going to take the log of the posterior because it helps with computation}
\ln\left(p(r,\sigma, p|X)\right)\propto&Z\ln\left(1 + (1/\sigma-1)(1-p)^r\right) + Z\ln(\sigma) + (N-Z)\ln(1-\sigma)+(N-Z)r\ln(1-p)\\
&+\sum_{i=1}^NX_i\ln(p)-\ln(r)/2-N\ln(\Gamma(r))+\sum_{i=1}^N\ln(\Gamma(r+X_i))
\end{align*}
\end{document}